// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.771
// Code generated by "templplaygroundgenerator"; DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/jfbus/templ-components/components/checkbox"
	"github.com/jfbus/templ-components/components/icon"
	"github.com/jfbus/templ-components/components/input"
	"github.com/jfbus/templ-components/components/position"
	"github.com/jfbus/templ-components/components/selectfield"
	"github.com/jfbus/templ-components/components/selectfield/option"
	"github.com/jfbus/templ-components/components/size"
	"strconv"
)

func InputViewer(def input.D) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = input.C(def).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func InputForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Name",
			Label: "Name",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = selectfield.C(selectfield.D{
			Name:  "Type",
			Label: "Type",
			Options: []option.D{
				{
					Label: "Select a value",
				},
				{
					Label: "input.TypeEmail",
					Value: string(input.TypeEmail),
				},
				{
					Label: "input.TypeNumber",
					Value: string(input.TypeNumber),
				},
				{
					Label: "input.TypePassword",
					Value: string(input.TypePassword),
				},
				{
					Label: "input.TypeText",
					Value: string(input.TypeText),
				},
				{
					Label: "input.TypeURL",
					Value: string(input.TypeURL),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Label",
			Label: "Label",
			Value: "Label",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Value",
			Label: "Value",
			Value: "Value",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = input.C(input.D{
			Name:  "Placeholder",
			Label: "Placeholder",
			Value: "Placeholder",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = checkbox.C(checkbox.D{
			Name:  "Disabled",
			Label: "Disabled",
			Value: "true",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = selectfield.C(selectfield.D{
			Name:  "Size",
			Label: "Size",
			Options: []option.D{
				{
					Label: "Select a value",
				},
				{
					Label: "size.S",
					Value: strconv.Itoa(int(size.S)),
				},
				{
					Label: "size.Normal",
					Value: strconv.Itoa(int(size.Normal)),
				},
				{
					Label: "size.L",
					Value: strconv.Itoa(int(size.L)),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = checkbox.C(checkbox.D{
			Name:  "Loader",
			Label: "Loader",
			Value: "true",
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = selectfield.C(selectfield.D{
			Name:  "Icon",
			Label: "Icon",
			Options: []option.D{
				{
					Label: "Select a value",
				},
				{
					Label: "icon.Flower",
					Value: string(icon.Flower),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = selectfield.C(selectfield.D{
			Name:  "IconPosition",
			Label: "IconPosition",
			Options: []option.D{
				{
					Label: "Select a value",
				},
				{
					Label: "position.Start",
					Value: strconv.Itoa(int(position.Start)),
				},
				{
					Label: "position.End",
					Value: strconv.Itoa(int(position.End)),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func InputSection() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = ComponentViewer(Component{
			ID:   "Input",
			Form: InputForm(),
			Viewer: InputViewer(input.D{
				Label:       "Label",
				Value:       "Value",
				Placeholder: "Placeholder",
			}),
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
