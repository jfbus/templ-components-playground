// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.771
// Code generated by "templplaygroundgenerator"; DO NOT EDIT.

package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/jfbus/templ-components-playground/templplayground/views/components"
	"github.com/jfbus/templ-components/components/accordion"
	"github.com/jfbus/templ-components/components/accordion/element"
)

func Main() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = accordion.C(accordion.D{
			ID: "templPlayground",
			Children: []element.D{
				{
					Title:   "Accordion",
					Content: components.AccordionSection(),
				},
				{
					Title:   "Button",
					Content: components.ButtonSection(),
				},
				{
					Title:   "Buttongroup",
					Content: components.ButtongroupSection(),
				},
				{
					Title:   "Checkbox",
					Content: components.CheckboxSection(),
				},
				{
					Title:   "Icon",
					Content: components.IconSection(),
				},
				{
					Title:   "Inline",
					Content: components.InlineSection(),
				},
				{
					Title:   "Input",
					Content: components.InputSection(),
				},
				{
					Title:   "Label",
					Content: components.LabelSection(),
				},
				{
					Title:   "Radio",
					Content: components.RadioSection(),
				},
				{
					Title:   "Radiogroup",
					Content: components.RadiogroupSection(),
				},
				{
					Title:   "Selectfield",
					Content: components.SelectfieldSection(),
				},
				{
					Title:   "Table",
					Content: components.TableSection(),
				},
				{
					Title:   "Textarea",
					Content: components.TextareaSection(),
				},
			},
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
